---
# to run: docker-compose run
#
# Create a .env file in the same folder as this file and change the variables.
# VPN_USERNAME=changeme
# VPN_PASSWORD=changeme
#
version: "3.7"

services:

 # media server #

  transmission:
    cap_add: [NET_ADMIN]
    container_name: transmission-openvpn
    devices: [/dev/net/tun]
    dns: [8.8.8.8, 8.8.4.4]
    environment: ["OPENVPN_PROVIDER=${VPN_PROVIDER}", "OPENVPN_USERNAME=${VPN_USERNAME}", "OPENVPN_PASSWORD=${VPN_PASSWORD}", "OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60", "LOCAL_NETWORK=192.168.0.0/24"]
    image: haugene/transmission-openvpn:latest
    ports: [9091:9091,8888]
    sysctls: [net.ipv6.conf.all.disable_ipv6=0]
    volumes: [/etc/localtime:/etc/localtime:ro,./transmission/data/:/data]

  proxy:
    container_name: proxy
    image: haugene/transmission-openvpn-proxy:latest
    links: [transmission]
    ports: [8080:8080]
    volumes: [/etc/localtime:/etc/localtime:ro]

  rss:
    container_name: rss
    environment: [RSS_URL=http://.../xxxxx.rss]
    image: haugene/transmission-rss:latest
    links: [transmission]

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    ports: [8989:8989]
    volumes: [./sonarr/config:/config,./sonarr/tvseries:/tv,./sonarr/downloads:/downloads]

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    ports: [7878:7878]
    volumes: [./radarr/config:/config,./radarr/movies:/movies,./radarr/downloads:/downloads]

  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    ports: [9117:9117]
    volumes: [./jackett/config:/config,./jackett/downloads:/downloads]

  plex:
    container_name: plex
    image: plexinc/pms-docker:latest
    ports: [32400:32400]
    volumes: [./plex/config:/config,./plex/transcode:/transcode,./plex/data:/data,~/mnt/videos:/videos]

  tautulli:
    container_name: tautulli
    image: linuxserver/tautulli:latest
    ports: [8181:8181]
    volumes: [./tautulli/config:/config,./tautulli/plex_logs:/plex_logs:ro]

  lidarr:
    container_name: lidarr
    image: linuxserver/lidarr:latest
    ports: [8686:8686]
    volumes: [./lidarr/appdata/config:/config,./lidarr/music:/music,./lidarr/downloads:/downloads]

  organizr:
    container_name: organizr
    image: linuxserver/organizr:latest
    ports: [20009:80]
    volumes: [./organizr/config:/config]

  mylar:
    container_name: mylar
    image: linuxserver/mylar:latest
    ports: [8090:8090]
    volumes: [./mylar/config:/config,./mylar/comics:/comics/,./mylar/downloads:/downloads]

  headphones:
    container_name: headphones
    image: linuxserver/headphones:latest
    ports: [8182:8181]
    volumes: [./headphones/config:/config,./headphones/music:/music/,./headphones/downloads:/downloads]

  jellyfin:
    image: linuxserver/jellyfin
    container_name: jellyfin
    volumes: [./jellyfin/library:/config,./jellyfin/tvseries:/data/tvshows,./jellyfin/movies:/data/movies]
    ports: [8096:8096]

 # monitoring #

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports: [8086:8086,8083,8090]
    environment: ["INFLUXDB_DATA_ENGINE=tsm1","INFLUXDB_REPORTING_DISABLED=false"]
    volumes: [./influxdb/data:/var/lib/influxdb]

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    links: [influxdb]
    volumes: [./telegraf.conf:/etc/telegraf/telegraf.conf:ro,/var/run/docker.sock:/var/run/docker.sock]

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports: [3000:3000]
    environment: ["GF_INSTALL_PLUGINS=grafana-clock-panel,briangann-gauge-panel,natel-plotly-panel,grafana-simple-json-datasource,grafana-worldmap-panel,grafana-piechart-panel"]
    user: "0"
    links: [influxdb]
    volumes: [./grafana/data:/var/lib/grafana]

  chronograf:
    image: chronograf:latest
    container_name: chronograf
    ports: [8888:8888]
    volumes: [./chronograf:/var/lib/chronograf]
    links: [influxdb]
